// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dalbers.podcastexplorer.dagger;

import com.dalbers.podcastexplorer.contracts.SearchContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class DataModule_ProvideModelFactory implements Factory<SearchContract.Model> {
  private final DataModule module;

  public DataModule_ProvideModelFactory(DataModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public SearchContract.Model get() {
    return Preconditions.checkNotNull(
        module.provideModel(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SearchContract.Model> create(DataModule module) {
    return new DataModule_ProvideModelFactory(module);
  }

  /** Proxies {@link DataModule#provideModel()}. */
  public static SearchContract.Model proxyProvideModel(DataModule instance) {
    return instance.provideModel();
  }
}
